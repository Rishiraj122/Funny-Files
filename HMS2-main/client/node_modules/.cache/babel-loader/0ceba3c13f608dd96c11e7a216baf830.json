{"ast":null,"code":"var _jsxFileName = \"/Users/sherlock/Desktop/Actual Project/HMS2-main/client/src/pages/StaffDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport jwt from 'jsonwebtoken';\nimport { useHistory } from 'react-router-dom';\nimport RoomAllotment from '../components/RoomAllotment';\nimport AllottedStudents from '../components/AllottedStudents';\nimport Notice from '../components/Notice';\nimport AdminNotice from '../components/AdminNotice';\nimport Header from '../components/Header.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StaffDashboard = () => {\n  _s();\n\n  const history = useHistory(); //history instance a react hook\n\n  const logout = () => {\n    window.localStorage.clear(); //to clear the localstorage of the user, so when \n    //a user logsout it's login local storage is cleared\n\n    window.location.href = '/login';\n  }; // const allotRoom=()=>{\n  //     window.location.href='/RoomAllotment'\n  // }\n  // const allotmentStatus=()=>{\n  //     window.location.href='/AllottedStudents'\n  // }\n  // const uploadNotice=()=>{\n  //     window.location.href='/notice'\n  // }\n  // const deleteNotice=()=>{\n  //     window.location.href='/adminnotice'\n  // }\n\n\n  useEffect(() => {\n    //useEffect react hook to tell React that \n    //components need to do something on render\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      const user = jwt.decode(token); // for authentication\n\n      history.push('/login'); //if authentication fails load the login page\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Staff Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Today's Menu: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Veg\",\n        name: \"vegfood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"non-veg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"btn btn-light btn-lg\",\n      children: \"Upload Today's Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"btn btn-dark\",\n      onClick: logout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StaffDashboard, \"bz2N+u0mX89LO9zOCfVCA9Sa20M=\", false, function () {\n  return [useHistory];\n});\n\n_c = StaffDashboard;\nexport default StaffDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"StaffDashboard\");","map":{"version":3,"sources":["/Users/sherlock/Desktop/Actual Project/HMS2-main/client/src/pages/StaffDashboard.js"],"names":["React","useEffect","useState","jwt","useHistory","RoomAllotment","AllottedStudents","Notice","AdminNotice","Header","StaffDashboard","history","logout","window","localStorage","clear","location","href","token","getItem","user","decode","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;;AAEA,MAAMC,cAAc,GAAG,MAAK;AAAA;;AACxB,QAAMC,OAAO,GAAGP,UAAU,EAA1B,CADwB,CACK;;AAC7B,QAAMQ,MAAM,GAAC,MAAI;AACbC,IAAAA,MAAM,CAACC,YAAP,CAAoBC,KAApB,GADa,CACe;AAC5B;;AACAF,IAAAA,MAAM,CAACG,QAAP,CAAgBC,IAAhB,GAAqB,QAArB;AACH,GAJD,CAFwB,CAQxB;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AAAE;AACd;AACA,UAAMiB,KAAK,GAAGJ,YAAY,CAACK,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAG,CAACD,KAAJ,EAAW;AACP,YAAME,IAAI,GAAGjB,GAAG,CAACkB,MAAJ,CAAWH,KAAX,CAAb,CADO,CACwB;;AAC/BP,MAAAA,OAAO,CAACW,IAAR,CAAa,QAAb,EAFO,CAEiB;AAC3B;AACF,GAPM,CAAT;AASA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,WAAW,EAAC,KAAnB;AAAyB,QAAA,IAAI,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAQI;AAAQ,MAAA,KAAK,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eAaI;AAAA;AAAA;AAAA;AAAA,YAbJ,eAcI;AAAQ,MAAA,KAAK,EAAC,cAAd;AAA6B,MAAA,OAAO,EAAEV,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAnDD;;GAAMF,c;UACcN,U;;;KADdM,c;AAqDN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport jwt from 'jsonwebtoken'\nimport { useHistory } from 'react-router-dom'\nimport RoomAllotment from '../components/RoomAllotment'\nimport AllottedStudents from '../components/AllottedStudents'\nimport Notice from '../components/Notice'\nimport AdminNotice from '../components/AdminNotice'\nimport Header from '../components/Header.js'\n\nconst StaffDashboard = () =>{\n    const history = useHistory();//history instance a react hook\n    const logout=()=>{\n        window.localStorage.clear();//to clear the localstorage of the user, so when \n        //a user logsout it's login local storage is cleared\n        window.location.href='/login'\n    }\n\n    // const allotRoom=()=>{\n    //     window.location.href='/RoomAllotment'\n    // }\n\n    // const allotmentStatus=()=>{\n    //     window.location.href='/AllottedStudents'\n    // }\n\n    // const uploadNotice=()=>{\n    //     window.location.href='/notice'\n    // }\n\n    // const deleteNotice=()=>{\n    //     window.location.href='/adminnotice'\n    // }\n\n    useEffect(() => { //useEffect react hook to tell React that \n        //components need to do something on render\n        const token = localStorage.getItem('token');\n        if(!token) {\n            const user = jwt.decode(token) // for authentication\n            history.push('/login'); //if authentication fails load the login page\n        }\n      })\n\n    return (\n        <div>\n            <Header/>\n            <h1>Staff Dashboard</h1>\n            <form>\n                <label>Enter Today's Menu: </label>\n                <input placeholder='Veg' name='vegfood'></input>\n                <input placeholder='non-veg'></input>\n            </form>\n            <button class=\"btn btn-light btn-lg\">Upload Today's Menu</button>\n            {/* <button class=\"btn btn-dark btn-lg\" onClick={allotRoom}>Allot Room</button><br></br>\n            <button class=\"btn btn-light btn-lg\" onClick={allotmentStatus}>View Allotment Status</button><br></br>\n            <button class=\"btn btn-dark btn-lg\" onClick={uploadNotice}>Upload Notice</button><br></br>\n            <button class=\"btn btn-light btn-lg\" onClick={deleteNotice}>Delete Notice</button><br></br>  */}\n            <br></br>\n            <button class=\"btn btn-dark\" onClick={logout}>Logout</button>\n        </div>\n    )\n}\n\nexport default StaffDashboard"]},"metadata":{},"sourceType":"module"}