{"ast":null,"code":"var _jsxFileName = \"/Users/sherlock/Desktop/Actual Project/HMS2-main/client/src/pages/CleanRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport jwt from 'jsonwebtoken';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CleanRoom = () => {\n  _s();\n\n  const history = useHistory();\n\n  const notice = () => {\n    window.location.href = '/noticedisplay';\n  };\n\n  const logout = () => {\n    window.localStorage.clear();\n    window.location.href = '/studentlogin';\n  };\n\n  const [clean, setClean] = useState([]);\n  const [room, setRoom] = useState([]);\n  const item = [];\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const user = jwt.decode(token);\n\n      if (!user) {\n        localStorage.removeItem('token');\n        history.replace('/studentlogin');\n      }\n\n      apiGet();\n    } else {\n      history.push('/studentlogin');\n    }\n  }, []);\n\n  const apiGet = () => {\n    const token = localStorage.getItem('token');\n    const user = jwt.decode(token); //This contains the values of logged user..\n    // console.log it to view\n\n    fetch('http://localhost:1337/api/room').then(response => response.json()).then(json => {\n      for (let i = 0; i < json.user.length; i = i + 1) {\n        setRoom(json.user[i].rid);\n      }\n    });\n    return {\n      item\n    };\n  };\n\n  async function cleanRoom(event) {\n    event.preventDefault();\n    const response = await fetch('http://localhost:1337/api/clean', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        room,\n        clean\n      })\n    });\n    const data = await response.json();\n\n    if (data.status == 'ok') {\n      history.push('/studentdashboard');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Student Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"alert alert-secondary\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 8\n        }, this), \" \", room]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"btn btn-dark btn-lg btn-block\",\n      onClick: notice,\n      children: \"View Notice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 87\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"btn btn-dark\",\n      onClick: logout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CleanRoom, \"qDpNFm/FkQZ0fD8h7CwxCLLlyoQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = CleanRoom;\nexport default CleanRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"CleanRoom\");","map":{"version":3,"sources":["/Users/sherlock/Desktop/Actual Project/HMS2-main/client/src/pages/CleanRoom.js"],"names":["React","useEffect","useState","jwt","useHistory","CleanRoom","history","notice","window","location","href","logout","localStorage","clear","clean","setClean","room","setRoom","item","token","getItem","user","decode","removeItem","replace","apiGet","push","fetch","then","response","json","i","length","rid","cleanRoom","event","preventDefault","method","headers","body","JSON","stringify","data","status"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from \"react\";\nimport jwt from 'jsonwebtoken'\nimport { useHistory } from 'react-router-dom'\n\n\n\nconst CleanRoom = () => {\n\tconst history = useHistory()\n\n\tconst notice=()=>{\n\t\twindow.location.href='/noticedisplay'\n\t}\n\tconst logout=()=>{\n        window.localStorage.clear();\n        window.location.href='/studentlogin'\n    }\n\n\tconst[clean, setClean] = useState([]);\n\tconst[room, setRoom] = useState([]);\n    const item=[];\n\n\tuseEffect(() => {\n\t\tconst token = localStorage.getItem('token')\n\t\tif (token) {\n\t\t\tconst user = jwt.decode(token)\n\t\t\tif (!user) {\n\t\t\t\tlocalStorage.removeItem('token')\n\t\t\t\thistory.replace('/studentlogin')\n\t\t\t} \n\t\t\tapiGet();\n\t\t}\n\t\telse{\n\t\t\thistory.push('/studentlogin')\n\t\t}\n\t}, [])\n\n\t\n\n\tconst apiGet = ()=>{\n\t\tconst token = localStorage.getItem('token')\n\t\tconst user = jwt.decode(token) //This contains the values of logged user..\n\t\t// console.log it to view\n\t\tfetch('http://localhost:1337/api/room')\n        .then((response)=>response.json())\n        .then((json)=>{\n            for(let i=0;i<json.user.length;i=i+1){\n                    setRoom(json.user[i].rid);\n            }\n\t\t})\n\t\treturn {item}\n    }\n\n\tasync function cleanRoom(event){\n\t\tevent.preventDefault();\n\n\t\tconst response = await fetch('http://localhost:1337/api/clean',{\n\t\tmethod: 'POST',\n\t\theaders:{\n\t\t\t'Content-type':'application/json',\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\troom,\n\t\t\tclean\n\t\t}),\n\t\t})\n\t\tconst data = await response.json()\n\t\tif(data.status=='ok'){\n\t\t\thistory.push('/studentdashboard')\n\t\t}\n\t}\n\n\t\n\n\t\n\treturn (\n\t\t<div >\n\t\t\t<h1>Student Dashboard</h1>\n\t\t\t<div class=\"alert alert-secondary\">\n\t\t\t\t<p><strong>Name:</strong> {room}</p>\n\t\t\t\t\n\t\t\t</div>\n\n\t\t\t<button class=\"btn btn-dark btn-lg btn-block\" onClick={notice}>View Notice</button><br></br>\n\t\t\t<br></br>\n\t\t\t<button class=\"btn btn-dark\" onClick={logout}>Logout</button>\n\t\t</div>\n\t)\n}\n\nexport default CleanRoom\n"]},"metadata":{},"sourceType":"module"}