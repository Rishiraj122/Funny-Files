{"ast":null,"code":"var _jsxFileName = \"/Users/sherlock/Desktop/Actual Project/HMS2-main/client/src/pages/StaffDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport jwt from 'jsonwebtoken';\nimport { useHistory } from 'react-router-dom';\nimport Header from '../components/Header.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StaffDashboard = () => {\n  _s();\n\n  const history = useHistory(); //history instance a react hook\n\n  const [foodid, setfoodid] = useState('');\n  const [vegfood, setVegfood] = useState('');\n  const [nonvegfood, setNonvegfood] = useState('');\n\n  const logout = () => {\n    window.localStorage.clear(); //to clear the localstorage of the user, so when \n    //a user logsout it's login local storage is cleared\n\n    window.location.href = '/login';\n  };\n\n  async function publishFood(event) {\n    event.preventDefault();\n    const response = await fetch('http://localhost:1337/api/foodtoday', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        foodid,\n        vegfood,\n        nonvegfood\n      })\n    });\n    const data = await response.json();\n\n    if (data.status == 'ok') {\n      alert(\"Food Published\");\n      history.push('/staffdashboard');\n    }\n  }\n\n  useEffect(() => {\n    //useEffect react hook to tell React that \n    //components need to do something on render\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      const user = jwt.decode(token); // for authentication\n\n      history.push('/login'); //if authentication fails load the login page\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Staff Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: publishFood,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Today's Menu: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: vegfood,\n        onChange: e => setVegfood(e.target.value),\n        placeholder: \"Veg\",\n        name: \"vegfood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: nonvegfood,\n        onChange: e => setNonvegfood(e.target.value),\n        placeholder: \"non-veg\",\n        name: \"nonvegfood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"btn btn-light btn-lg\",\n      children: \"Upload Today's Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"btn btn-dark\",\n      onClick: logout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StaffDashboard, \"ARHkl8q7ElQ7tG3QPFQmdAiZ0Ng=\", false, function () {\n  return [useHistory];\n});\n\n_c = StaffDashboard;\nexport default StaffDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"StaffDashboard\");","map":{"version":3,"sources":["/Users/sherlock/Desktop/Actual Project/HMS2-main/client/src/pages/StaffDashboard.js"],"names":["React","useEffect","useState","jwt","useHistory","Header","StaffDashboard","history","foodid","setfoodid","vegfood","setVegfood","nonvegfood","setNonvegfood","logout","window","localStorage","clear","location","href","publishFood","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","status","alert","push","token","getItem","user","decode","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport jwt from 'jsonwebtoken'\nimport { useHistory } from 'react-router-dom'\nimport Header from '../components/Header.js'\n\nconst StaffDashboard = () =>{\n    const history = useHistory();//history instance a react hook\n\n    const [foodid,setfoodid]=useState('');\n    const [vegfood,setVegfood]=useState('');\n    const [nonvegfood,setNonvegfood]=useState('');\n\n    const logout=()=>{\n        window.localStorage.clear();//to clear the localstorage of the user, so when \n        //a user logsout it's login local storage is cleared\n        window.location.href='/login'\n    }\n\n    async function publishFood(event){\n        event.preventDefault();\n\n        const response = await fetch('http://localhost:1337/api/foodtoday',{\n            method: 'POST',\n            headers:{\n                'Content-type':'application/json'\n            },\n            body: JSON.stringify({\n                foodid,\n                vegfood,\n                nonvegfood\n            }),\n        })\n\n        const data = await response.json();\n        if(data.status=='ok'){\n            alert(\"Food Published\")\n            history.push('/staffdashboard');\n        }\n\n    }\n    \n\n    useEffect(() => { //useEffect react hook to tell React that \n        //components need to do something on render\n        const token = localStorage.getItem('token');\n        if(!token) {\n            const user = jwt.decode(token) // for authentication\n            history.push('/login'); //if authentication fails load the login page\n        }\n      })\n\n    return (\n        <div>\n            <Header/>\n            <h1>Staff Dashboard</h1>\n            <form onSubmit={publishFood}>\n                <label>Enter Today's Menu: </label>\n                <input value={vegfood}\n\t\t\t\t\tonChange={(e) => setVegfood(e.target.value)} placeholder='Veg' name='vegfood'></input>\n                <input value={nonvegfood}\n\t\t\t\t\tonChange={(e) => setNonvegfood(e.target.value)} placeholder='non-veg' name='nonvegfood'></input>\n                <button>Send</button>\n            </form>\n            <button class=\"btn btn-light btn-lg\">Upload Today's Menu</button>\n            {/* <button class=\"btn btn-dark btn-lg\" onClick={allotRoom}>Allot Room</button><br></br>\n            <button class=\"btn btn-light btn-lg\" onClick={allotmentStatus}>View Allotment Status</button><br></br>\n            <button class=\"btn btn-dark btn-lg\" onClick={uploadNotice}>Upload Notice</button><br></br>\n            <button class=\"btn btn-light btn-lg\" onClick={deleteNotice}>Delete Notice</button><br></br>  */}\n            <br></br>\n            <button class=\"btn btn-dark\" onClick={logout}>Logout</button>\n        </div>\n    )\n}\n\nexport default StaffDashboard"]},"metadata":{},"sourceType":"module"}